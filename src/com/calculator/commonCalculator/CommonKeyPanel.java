package com.calculator.commoncalculator;

import com.amath.advacedmath.tokenizing.Token;
import static com.amath.advacedmath.tokenizing.Token.DIVIDE;
import static com.amath.advacedmath.tokenizing.Token.DOT;
import static com.amath.advacedmath.tokenizing.Token.EIGHT;
import static com.amath.advacedmath.tokenizing.Token.EQUAL;
import static com.amath.advacedmath.tokenizing.Token.FIVE;
import static com.amath.advacedmath.tokenizing.Token.FOUR;
import static com.amath.advacedmath.tokenizing.Token.MINUS;
import static com.amath.advacedmath.tokenizing.Token.MODULO;
import static com.amath.advacedmath.tokenizing.Token.MULTIPLY;
import static com.amath.advacedmath.tokenizing.Token.NINE;
import static com.amath.advacedmath.tokenizing.Token.ONE;
import static com.amath.advacedmath.tokenizing.Token.PLUS;
import static com.amath.advacedmath.tokenizing.Token.SEVEN;
import static com.amath.advacedmath.tokenizing.Token.SIX;
import static com.amath.advacedmath.tokenizing.Token.SQUARED;
import static com.amath.advacedmath.tokenizing.Token.SQUREROOT;
import static com.amath.advacedmath.tokenizing.Token.THREE;
import static com.amath.advacedmath.tokenizing.Token.TWO;
import static com.amath.advacedmath.tokenizing.Token.ZERO;
import com.amath.advacedmath.tokenizing.TokenList;
import com.amath.advacedmath.tokenizing.TokenType;
import com.calculator.commoncalculator.button.CommonButton;
import com.calculator.commoncalculator.button.ButtonLayout;
import com.calculator.commoncalculator.button.ButtonList;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class CommonKeyPanel extends javax.swing.JPanel {

    public final ButtonList buttons;
    final ArrayList<JPanel> blocks;
    final CommonNumberPanel parentText;

    public CommonKeyPanel(CommonNumberPanel parent, TokenList buttons, String pattern, int layout) throws Exception {
        initComponents();
        blocks = new ArrayList<>();
        parentText = parent;
        this.buttons = new ButtonList(buttons, pattern, layout);
        setButtons();
    }

    public ButtonList getButtons() {
        return buttons;
    }

    public ArrayList<JPanel> getBlocks() {
        return blocks;
    }

    public CommonNumberPanel getParentText() {
        return parentText;
    }

    public final void setButtons() {
        int layout = 0;
        int blockLength = 0;
        switch (buttons.getLayout()) {
            case ButtonLayout.COLUMN:
                layout = javax.swing.BoxLayout.LINE_AXIS;
                blockLength = buttons.width;
                break;
            case ButtonLayout.ROW:
                layout = javax.swing.BoxLayout.PAGE_AXIS;
                blockLength = buttons.height;
                break;
            default:
                break;
        }
        setLayout(new javax.swing.BoxLayout(this, layout));
        for (int i = 0; i < blockLength; i++) {
            JPanel p = new JPanel();
            p.setLayout(new BoxLayout(p, layout == BoxLayout.PAGE_AXIS ? BoxLayout.LINE_AXIS : BoxLayout.PAGE_AXIS));
            blocks.add(p);
        }
        blockLength = blockLength == buttons.width ? buttons.height : buttons.width;
        for (JPanel block : blocks) {
            for (int i = 0; i < blockLength; i++) {
                CommonButton b = buttons.getNextKey();
                if (b != null) {
                    b.setParentTextField(parentText);
                    block.add(b);
                } else {
                    blocks.get(i).add(new EmptyFiller());
                }
            }
        }
        addBlocks();
    }

    public void addBlock(JPanel block, int index) {
        blocks.add(index, block);
    }

    public void addBlocks() {
        removeAll();
        for (JPanel block : blocks) {
            add(block);
        }
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMinimumSize(new java.awt.Dimension(300, 300));
        setPreferredSize(new java.awt.Dimension(300, 300));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents

    class EmptyFiller extends JPanel {

        public EmptyFiller() {
            setMaximumSize(new java.awt.Dimension(1000, 1000));
            setMinimumSize(new java.awt.Dimension(40, 30));
            setPreferredSize(new java.awt.Dimension(70, 47));
        }

    }

    public static void main(String[] args) {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CommonKeyPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        JFrame frame = new JFrame("Common number field");
        frame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        frame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(new javax.swing.BoxLayout(frame.getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));
        TokenList buttons = new TokenList(
                MODULO, new Token(TokenType.SYMBOL, "CE", (char) KeyEvent.VK_DELETE), new Token(TokenType.SYMBOL, "C", (char) KeyEvent.VK_ESCAPE), new Token(TokenType.SYMBOL, "<x]", (char) KeyEvent.VK_BACK_SPACE),
                new Token(TokenType.FUNCTION_, "1/x", 'r'), SQUARED, SQUREROOT, DIVIDE, SEVEN, EIGHT, NINE, MULTIPLY, FOUR, FIVE, SIX, MINUS, ONE, TWO, THREE, PLUS,
                new Token(TokenType.SYMBOL, "+/-", '`'), ZERO, DOT, EQUAL);
        String pattern = ""
                + "####\n"
                + "####\n"
                + "####\n"
                + "####\n"
                + "####\n"
                + "####\n";
        CommonKeyPanel p = null;
        try {
            p = new CommonKeyPanel(null, buttons, pattern, ButtonLayout.ROW);
        } catch (Exception ex) {
            Logger.getLogger(CommonKeyPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        frame.pack();
        frame.getContentPane().add(p);
        new Thread(() -> {
            double d = 0;
            while (d < 300) {
                d++;
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(CommonKeyPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            System.exit(0);
        }).start();
        java.awt.EventQueue.invokeLater(() -> {
            frame.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
